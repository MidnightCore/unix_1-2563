#include <omp.h>
#include <stdio.h>
#include <stdlib.h>
#include<time.h>
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>

#define N 5
int main(){

	int sumpara=0;
	key_t key = ftok("shmfile",65);
	int shmid = shmget(key,1024,0666|IPC_CREAT);
	int* t = (int*) shmat(shmid,(void*)0,0);
	int num = 0;
	int* b = (int*)malloc(sizeof(int)*N);
	srand(time(NULL));
	#pragma omp parallel for num_threads(4)
		for (int i=0; i<N; i++)
			{
				b[i] = rand()%10;
				printf("Num = %d : Thread = %d\n",b[i],omp_get_thread_num());
				
			}
		for (int i=0; i<N; i++)
			{
				
				t[i]=b[i];
			}


	return 0;
}

